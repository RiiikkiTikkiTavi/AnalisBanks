@page "/calculate"
@using BlazorApp1.Models
@using BlazorBootstrap

@rendermode InteractiveServer

<h3>Calculate</h3>

<div class="d-flex align-items-start gap-3 flex-wrap">
<select @bind="SelectedMethod" class="form-select w-25">
    <option disabled value="0">Выберите методику</option>
    @foreach (var meth in methods)
    {
        <option value="@meth.IdMethods">@meth.Name</option>
    }
</select>


    <InputNumber @bind-Value="Regnum" class="form-control w-auto" />
    <InputDate @bind-Value="OnDate" class="form-control w-auto" />


<button class="btn btn-primary" @onclick="Calcs">Рассчитать</button>
</div>




<!--Модальное окно выбора показателя-->
<!--В GetItemSelected пердается id и тип выбранной строки-->
<Modal @ref="tempModal" Title="Выбрать показатель" Class="modal-lg">
    <BodyTemplate>
        <FormsTemplate />
    </BodyTemplate>
    <FooterTemplate>
        <Button class="btn btn-secondary" @onclick="OnHideTemp">Закрыть</Button>
    </FooterTemplate>
</Modal>





@code {
    // внедрение фабрики для создания экземпляров BanksContext.
    [Inject] private IDbContextFactory<BanksContext> dbFactory { get; set; }
    private int regnum = 1000;
    private string bankName;
    //private DateTime onDate = DateTime.Today;
    private DateTime onDate = new DateTime(2025, 1, 1); // год - месяц - день;



    private bool isLoading = false;
    private bool showNulls = false;

    private int selectedMethod = 135; // ID формы по умолчанию
    private List<int> formNumber = new() { 123, 135, 101 }; // Пример списка форм

    public int Regnum { get => regnum; set => regnum = value; }
    public string BankName { get => bankName; set => bankName = value; }
    public DateTime OnDate { get => onDate; set => onDate = value; }
    public int SelectedMethod { get => selectedMethod; set => selectedMethod = value; }
    public List<int> FormNumber { get => formNumber; set => formNumber = value; }

    private List<Method> methods = new(); // Список методик

    private async Task LoadMethods()
    {
        await using var db = dbFactory.CreateDbContext();
        methods = await db.Methods.ToListAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        // Загружаем данные из базы данных
        await LoadMethods();
    }

    private CreditOrgInfoClient _creditService;

    private Modal modal = default!;
    private Modal tempModal = default!;

    private void Calcs(){}

   
    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }


    private async Task OnShowTemp()
    {
        await tempModal.ShowAsync();
    }

    private async Task OnHideTemp()
    {
        await tempModal.HideAsync();
       
    }
   

}