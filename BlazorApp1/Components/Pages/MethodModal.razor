@page "/new_method"

@using BlazorApp1.Models
@inject BanksContext db
@inject NavigationManager NavigationManager


@rendermode InteractiveServer

<h3 class="text-center mt-4">Добавить методику</h3>
<div>
<div class="mb-3">
	<label class="form-label">Название методики:</label>
	<input class="form-control w-50" @bind="NewMethod.Name" />
</div>
<div class="mb-3">
	<label class="form-label">Описание:</label>
	<textarea class="form-control w-50" @bind="NewMethod.Descr"></textarea>
</div>
<div class="d-flex">
	<button class="btn btn-primary me-2" @onclick="SaveMethod">Сохранить</button>
	<button class="btn btn-secondary" @onclick="Close">Отмена</button>
</div>
</div>


<style>
    .title {
        font-size: 24px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 20px;
    }

	.form-group {
		margin-bottom: 15px;
	}
</style>


@code {

	private Method NewMethod { get; set; } = new();


	private async Task SaveMethod()
	{
		if (string.IsNullOrWhiteSpace(NewMethod.Name) || string.IsNullOrWhiteSpace(NewMethod.Descr))
		{
			return;
		}
		var entry = db.Entry(NewMethod);
		db.Methods.Add(NewMethod);
		await db.SaveChangesAsync(); // Асинхронное сохранение в базу данных
		NavigationManager.NavigateTo("/methods");
		Console.WriteLine("SaveMethod");

	}


	private void Close()
	{
		NavigationManager.NavigateTo("/methods");
		Console.WriteLine("Close Method");
		//NewMethod = new Method(); // Очистить данные формы, например
		
	}

}