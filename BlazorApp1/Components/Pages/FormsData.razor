@using System.Xml.Linq
@using System.Data
@using System.Text
	


@page "/formsData"
@rendermode InteractiveServer


<h3>Данные форм</h3>

<div class="d-flex align-items-start gap-3 flex-wrap">
	<select @bind="SelectedForm" class="form-select w-25">
		<option disabled value="0">Выберите форму</option>
		@foreach (var form in FormNumber)
		{
			<option value="@form">Форма @form</option>
		}
	</select>


	<InputNumber @bind-Value="Regnum" class="form-control w-auto" />
	<InputDate @bind-Value="OnDate" class="form-control w-auto" />


	<div class="form-check align-self-end">
		<InputCheckbox @bind-Value="ShowNulls" class="form-check-input" id="nullsCheck" />
		<label class="form-check-label ms-1" for="nullsCheck">
			Показывать пустые значения
		</label>
	</div>

	<button class="btn btn-primary" @onclick="LoadData">Загрузить</button>
	<button class="btn btn-primary" @onclick="SaveData">Сохранить</button>

</div>


<p>@BankName</p>

@if (IsLoading)
{
	<p>Загрузка данных...</p>
}
// проверка пустой ли dataset, есть ли таблицы, есть ли строки
else if (Ds == null || Ds.Tables.Count == 0 || Ds.Tables.Cast<DataTable>().All(t => t.Rows.Count == 0))
{
	<p>Нет данных</p>
}
else
{
	// вывод данных форм
	@foreach (DataTable table in Ds.Tables)
	{
		{
			<h4>@table.TableName</h4>
			<table class="table">
				<thead>
					<tr>
						@foreach (DataColumn column in table.Columns)
						{
							<th>@column.ColumnName</th>
						}
					</tr>
				</thead>
				<tbody>
					@foreach (DataRow row in Ds.Tables[0].Rows.Cast<DataRow>()
									.Where(row => ShowNulls|| !ContainsNull(row))) // Фильтрация строк с null
					{
						<tr>
							@foreach (var item in row.ItemArray)
							{
								<td>@(item ?? "NULL")</td> <!-- Отображаем null как "NULL" -->
							}
						</tr>
					}
				</tbody>
			</table>
		}
	}

	
}



@code {

	

}






