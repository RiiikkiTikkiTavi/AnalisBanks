@page "/banksList"

@using BlazorApp1.Models
@using System.Data
@inject NavigationManager NavigationManager

<h3>Кредитные организации</h3>

<input @bind="searchText" placeholder="Введите наименование..." class="form-control mb-2" />
<button class="btn btn-primary mb-3" @onclick="ApplyFilter">Поиск</button>


@if (dataSet == null)
{
    <p>Загрузка...</p>
}

else
{
    <table class="table">
        <thead>
            <tr>
                <th>Дата регистрации</th>
                <th>Наименование</th>
                <th>Регистрационный номер</th>
            </tr>
        </thead>
        <tbody>
            @{

                @foreach (DataRow row in allRows.Rows)
                {
                    <tr>
                        <td>@row["RC"]</td>
                        <td>@row["NM"]</td>
                        <td>@row["cregnr"]</td>
                    </tr>
                }
                }


            
        </tbody>
    </table>
}

<!-- Контекстное меню -->
<!--
@if (showMenu)
{
    <div class="context-menu" style="top:@menuY; left:@menuX;">
        <ul class="dropdown-menu show">
            <li><a class="dropdown-item" @onclick="EditMethod">Редактировать</a></li>
            <li><a class="dropdown-item text-danger" @onclick="DeleteMethod">Удалить</a></li>
        </ul>
    </div>
}

<style>
    .context-menu {
        position: absolute;
        z-index: 1000;
    }
</style>

-->

@code {
    [Inject] private IDbContextFactory<BanksContext> dbFactory { get; set; }
    [Inject] private CreditOrgInfoClient CreditService { get; set; }


    private DataSet? dataSet;
    private DataTable? allRows;
    private IEnumerable<DataRow>? filteredRows;
    private string searchText;


    private async Task LoadMethods()
    {
        await using var db = dbFactory.CreateDbContext();
        dataSet = await CreditService.GetCreditOrgInfoAsync();
        allRows = dataSet.Tables[0];
        foreach (DataColumn column in allRows.Columns)
        {
            Console.WriteLine(column.ColumnName); // или Log, или добавь в список
        }
        //ApplyFilter();
    }

    private void ApplyFilter()
    {
        if (string.IsNullOrWhiteSpace(searchText))
        {
            filteredRows = allRows.Rows.Cast<DataRow>().ToList();
        }
        else
        {
            filteredRows = allRows.Rows.Cast<DataRow>()
                .Where(row => row["NM"]?.ToString().Contains(searchText, StringComparison.OrdinalIgnoreCase) == true)
                .ToList();
        }
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        // Загружаем данные из базы данных
        await LoadMethods();
    }

}
